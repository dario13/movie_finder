{"version":3,"sources":["components/SearchForm.tsx","services/api.tsx","components/Movie.tsx","components/MoviesList.tsx","components/Title.tsx","pages/Home.tsx","pages/MovieDetails.tsx","Routes.tsx","App.tsx","index.tsx"],"names":["SearchForm","props","React","useState","inputMovie","setInputMovie","onSubmit","e","preventDefault","undefined","handleSubmit","className","onChange","event","target","value","type","placeholder","baseUrl","getMovies","movieName","a","axios","get","then","response","data","Error","Promise","reject","Search","map","Poster","catch","getMovieDetails","imdbID","error","Movie","to","src","alt","Title","Year","MoviesList","printList","children","element","key","Home","moviesArray","setMoviesArray","usedSearch","setusedSearch","movieSearched","setMovieSearched","movieEntered","respond","console","log","length","MovieDetails","id","match","params","details","setDetails","useEffect","max","Genre","imdbRating","Director","Country","Plot","Routes","exact","path","component","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0e61442f.chunk.js","sourcesContent":["import React from \"react\";\n\ntype SearchFormProps = {\n  handleSubmit: (movieEntered: string) => void;\n};\n\nconst SearchForm: React.FC<SearchFormProps> = (props) => {\n  const [inputMovie, setInputMovie] = React.useState<string | null>();\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setInputMovie(event.target.value);\n  };\n\n  return (\n    <>\n      <form\n        onSubmit={(e) => {\n          e.preventDefault();\n          if (inputMovie !== undefined) props.handleSubmit(inputMovie!);\n        }}\n      >\n        <div className=\"field has-addons\">\n          <div className=\"control\">\n            <input\n              className=\"input is-large\"\n              onChange={handleChange}\n              type=\"text\"\n              placeholder=\"Find a movie\"\n            />\n          </div>\n          <div className=\"control\">\n            <button className=\"button is-info is-large\">Search</button>\n          </div>\n        </div>\n      </form>\n    </>\n  );\n};\n\nexport default SearchForm;\n","//import React from \"react\"\nimport axios from \"axios\";\nimport { movieType } from \"../pages/Home\";\n\nconst apiKey = \"26277d7a\";\nconst baseUrl = \"https://www.omdbapi.com/?apikey=\";\n\nexport const getMovies = async (movieName: string): Promise<movieType[]> => {\n  return await axios\n    .get(`${baseUrl}${apiKey}&s=${movieName}`)\n    .then((response) => {\n      // handle success\n      return response.data.Error !== undefined\n        ? (Promise.reject(\"The movie was not found\"), [])\n        : response.data.Search.map((value: movieType) => {\n            return value.Poster === \"N/A\"\n              ? ((value.Poster = \"https://i.redd.it/valbyu8f61gz.jpg\"), value)\n              : value;\n          });\n    })\n    .catch(() => {\n      // handle error\n      Promise.reject(\"Some error with the api\");\n      return [];\n    });\n};\n\nexport const getMovieDetails = async (imdbID: string): Promise<movieType> => {\n  return await axios\n    .get(`${baseUrl}${apiKey}&i=${imdbID}`)\n    .then((response) => {\n      // handle success\n      if (response.data.Error!) {\n        return Promise.reject({}); //If the response has an error return an empty movieType\n      } else {\n        return response.data.Poster === \"N/A\"\n          ? ((response.data.Poster = \"https://i.redd.it/valbyu8f61gz.jpg\"),\n            response.data)\n          : response.data;\n      }\n    })\n    .catch((error) => {\n      // handle error\n      Promise.reject({}); //If the response has an error return an empty movieType\n    });\n};\n","import React from \"react\";\nimport { movieType } from \"../pages/Home\";\nimport { Link } from \"react-router-dom\";\n\nexport const Movie: React.FC<movieType> = (props) => {\n  return (\n    <div className=\"card\">\n      <Link to={`/movie_finder/movie_details/${props.imdbID}`}>\n        <div className=\"card-image\">\n          <figure className=\"image is-4by3 image-card\">\n            <img src={props.Poster} alt={props.Title}></img>\n          </figure>\n        </div>\n        <div className=\"card-content\">\n          <div className=\"media\">\n            <div className=\"media-content\">\n              <p className=\"title is-4\">{props.Title}</p>\n              <p className=\"subtitle is-6\">{props.Year}</p>\n            </div>\n          </div>\n        </div>\n      </Link>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { movieType } from \"../pages/Home\";\nimport { Movie } from \"./Movie\";\n\ntype ListProps = {\n  children: movieType[]; //Array of objects\n};\n\nexport const MoviesList: React.FC<ListProps> = (props) => {\n  const printList = props.children.map((element) => (\n    <div className=\"MoviesList-item\" key={element.imdbID}>\n      <Movie\n        Poster={element.Poster}\n        Year={element.Year}\n        Title={element.Title}\n        imdbID={element.imdbID}\n      />\n    </div>\n  ));\n\n  return (\n    <>\n      <div className=\"MoviesList\">{printList}</div>\n    </>\n  );\n};\n","import React from \"react\";\n\ntype TitleProps = {\n  children: React.ReactNode;\n};\n\nconst Title: React.FC<TitleProps> = (props) => {\n  return <h1 className=\"title\">{props.children}</h1>;\n};\n\nexport default Title;\n","import React from \"react\";\nimport SearchForm from \"../components/SearchForm\";\nimport { getMovies } from \"../services/api\";\nimport { MoviesList } from \"../components/MoviesList\";\nimport Title from \"../components/Title\";\n\ntype movieId = {\n  imdbID: string;\n};\n\nexport type movieFields = {\n  Title: string;\n  Year: string;\n  Poster?: string;\n  Plot?: string;\n  Director?: string;\n  Genre?: string;\n  Languague?: string;\n  Country?: string;\n  imdbRating?: string;\n};\n\nexport type movieType = movieId & movieFields;\n\nexport const Home: React.FC = () => {\n  const [moviesArray, setMoviesArray] = React.useState<movieType[]>([]);\n  const [usedSearch, setusedSearch] = React.useState<boolean>(false);\n  const [movieSearched, setMovieSearched] = React.useState<string>(\"\");\n\n  const handleSubmit = async (movieEntered: string) => {\n    setMovieSearched(movieEntered);\n    await getMovies(movieEntered)\n      .then((respond) => setMoviesArray(respond))\n      .catch((error) => console.log(\"ERROR\"));\n    setusedSearch(true);\n  };\n\n  const printResults = () => {\n    return usedSearch === false ? ( //Show nothing if is the first iterate\n      <></>\n    ) : moviesArray?.length === 0 || moviesArray === null ? (\n      <h4>\n        &#128169; There aren't results with the name: {movieSearched} &#128078;\n      </h4>\n    ) : (\n      <MoviesList>{moviesArray!}</MoviesList>\n    );\n  };\n\n  //moviesArray.forEach((element:any) => console.log(element))\n\n  return (\n    <>\n      <Title>Movie Finder</Title>\n      <div className=\"SearchForm-wrapper\">\n        <SearchForm handleSubmit={handleSubmit} />\n      </div>\n      <div className=\"PrintResults-wrapper\">{printResults()}</div>\n    </>\n  );\n};\n","import React from \"react\";\nimport { RouteComponentProps } from \"react-router\";\nimport { getMovieDetails } from \"../services/api\";\n//import { createBrowserHistory } from 'history';\nimport { movieFields } from \"../pages/Home\";\n\ninterface MatchParams {\n  id: string;\n}\n\ninterface Props extends RouteComponentProps<MatchParams> {}\n\nexport const MovieDetails: React.FC<Props> = (props) => {\n  const { id } = props.match.params;\n  const [details, setDetails] = React.useState<movieFields | null>();\n\n  React.useEffect(() => {\n    getMovieDetails(id)\n      .then((respond: movieFields) => setDetails(respond))\n      .catch(() => setDetails(null));\n  }, []);\n\n  const renderDetails = () => {\n    return (\n      <div className=\"container\">\n        <div className=\"columns\">\n          <div className=\"column\"></div>\n          <div className=\"column is-half\">\n            <div className=\"card\">\n              <div className=\"card-content\">\n                <div className=\"content\">\n                  <h1 className=\"title is-1\">{details?.Title}</h1>\n                  <figure className=\"image-movie\">\n                    <img src={details?.Poster} alt=\"poster\"></img>\n                  </figure>\n                  <h2 className=\"subtitle is-3\">{details?.Year}</h2>\n                  <div>\n                    <p>\n                      <strong>Genre: </strong>\n                      {details?.Genre}\n                    </p>\n                    <p>\n                      <strong>Rating: </strong>\n                      {details?.imdbRating}/10 &#11088;\n                    </p>\n                    <p>\n                      <strong>Director: </strong>\n                      {details?.Director}\n                    </p>\n                    <p>\n                      <strong>Country: </strong>\n                      {details?.Country}\n                    </p>\n                    <p>{details?.Plot}</p>\n                  </div>\n                </div>\n                <div></div>\n              </div>\n            </div>\n          </div>\n          <div className=\"column\"></div>\n        </div>\n      </div>\n    );\n  };\n\n  const renderProgressBar = () => {\n    return (\n      <div className=\"container\">\n        <div className=\"columns is-vcentered\">\n          <progress className=\"progress is-large is-info\" max=\"10\"></progress>\n        </div>\n      </div>\n    );\n  };\n\n  const renderConditional = () => {\n    //return renderProgressBar();\n    console.log(details);\n    return details === undefined ? renderProgressBar() : renderDetails();\n  };\n\n  //<button onClick={(e)=>handlerClick}>Goback</button>\n  return <>{renderConditional()}</>;\n};\n","import React from \"react\";\n\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\n\nimport { Home } from \"./pages/Home\";\nimport { MovieDetails } from \"./pages/MovieDetails\";\n\nconst Routes = () => (\n  <BrowserRouter>\n    <Switch>\n      <Route exact path=\"/movie_finder\" component={Home} />\n      <Route path=\"/movie_finder/movie_details/:id\" component={MovieDetails} />\n    </Switch>\n  </BrowserRouter>\n);\n\nexport default Routes;\n","import React from \"react\";\nimport \"./App.css\";\nimport \"./mystyles.sass\";\n//import \"bulma/css/bulma.css\";\n\nimport Routes from \"./Routes\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Routes />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n//serviceWorker.unregister();\n"],"sourceRoot":""}